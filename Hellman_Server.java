package server_poste_2;


import java.awt.Color;
import static java.awt.Color.red;
import java.awt.Dimension;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.math.BigInteger;
import java.net.ServerSocket;
import java.net.Socket;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;
import javax.swing.UIManager;
   
import java.security.SignatureException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
//import poste1client.Hellman_Client;
//import poste1.RC4_As;
/*import static server_poste_2.Clientposte2.dout;
import static server_poste_2.Clientposte2.socke;*/
import static server_poste_2.Hellman_Server.mserver;
//import static sun.misc.PostVMInitHook.run;


public class Hellman_Server extends javax.swing.JFrame {
    
    
  static Socket socke,socket ,socke2;
  static   DataInputStream din;
   static DataOutputStream  dout;

 
   static ServerSocket serveur,serveur2;

    Hellman_Server(Socket socke) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

   
 
     
     public Dimension getPreferredSize() {
return new Dimension (770, 500); // largeur et hauteur préférées
}
   
        SecureRandom rnd = new SecureRandom();
   // BigInteger p= new BigInteger(1024,rnd);//	Construit un BigInteger de valeur aléatoire sur l'intervalle [0, 2pow nbBits-1]
    
  //   BigInteger b= new BigInteger(512,rnd);
   
   
    static String sb,sp,sg,sclé,sA,sB,sb1;
  
    
     static BigInteger A,p,g,B,b1,b;
     
public void  b(){
   
   try{ 
     sp=jp.getText();
     //construction de p  a partir la chaine  de char
         BigInteger p= new BigInteger(sp);
         //generer le b aleatoirement 
    BigInteger b= new BigInteger(2048,rnd);
     /*sa = a.toString();
  ja.append(sa);*/
  if(b.compareTo(p)==1)
    {BigInteger a3= b.mod(p);
  sb = a3.toString();
  jb.append(sb);
   BigInteger a6= p.subtract(a3);
   System.out.println("le cas: a sup p"+a6);
    }
     if(b.compareTo(p)==0)
         
    { String aa0, v="2";
    
             BigInteger aa= new BigInteger(v);
        BigInteger a4= p.subtract(aa);
  sb = a4.toString();
  jb.append(sb);
   BigInteger a6= p.subtract(a4);
   System.out.println("cas :p = a"+a6);
    }
     
        if(b.compareTo(p)==-1)
    {BigInteger a5= b.mod(p);
  sb = b.toString();
  jb.append(sb);
   BigInteger a6= p.subtract(b);
   System.out.println("le cas: p  sup"+a6);}
     }catch(Exception e){      JOptionPane.showMessageDialog(null, "  Attendez de  recevez le p et le g pour génerer le b  ");
     }
 
   
   
 /*sb = b.toString();
  jb.append(sb);*/

}
  
  String in;
 public  void sha256(String in) throws NoSuchAlgorithmException {
    
       
        MessageDigest mDigest = MessageDigest.getInstance("SHA-256");
   // System.out.println( input);
        byte[] result = mDigest.digest(in.getBytes());
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < result.length; i++) {
            sb.append(Integer.toString((result[i] & 0xff) + 0x100, 16).substring(2));
           
        }
    
            jhash.append( sb.toString()); 
     
    }  
   



public Hellman_Server() {
    
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        jclé = new javax.swing.JTextArea();
        générer =  new komponenMakeOver.buttonMakeOver();
        jScrollPane1 = new javax.swing.JScrollPane();
        jb = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jg = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jB = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        jA = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jhash = new javax.swing.JTextArea();
        jScrollPane8 = new javax.swing.JScrollPane();
        jp = new javax.swing.JTextArea();
        jScrollPane10 = new javax.swing.JScrollPane();
        jcle = new javax.swing.JTextArea();
        hasher =  new komponenMakeOver.buttonMakeOver();
        jButton1 =  new komponenMakeOver.buttonMakeOver();
        quitter =  new komponenMakeOver.buttonMakeOver();
        jButton4 =  new komponenMakeOver.buttonMakeOver();
        difie = new komponenMakeOver.buttonMakeOver();
        bcle =  new komponenMakeOver.buttonMakeOver();
        btnB =  new komponenMakeOver.buttonMakeOver();
        vide = new komponenMakeOver.buttonMakeOver();
        utiliser =  new komponenMakeOver.buttonMakeOver();
        connect =  new komponenMakeOver.buttonMakeOver();
        jButton3 =  new komponenMakeOver.buttonMakeOver();
        jButton5 =  new komponenMakeOver.buttonMakeOver();
        jLabel3 = new javax.swing.JLabel();

        jclé.setColumns(20);
        jclé.setRows(5);
        jclé.setText("gpuidab");
        jScrollPane4.setViewportView(jclé);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Diffie Hellman_La Genéation_de_clé_Le_poste_2(server)");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("Arial", 2, 10)); // NOI18N
        setForeground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(100, 800));
        setSize(new java.awt.Dimension(2, 10));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        générer.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        générer.setForeground(new java.awt.Color(255, 255, 255));
        générer.setText("b");
        générer.setToolTipText("b: BigIteger aleatoire et secret");
        générer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                générerMouseClicked(evt);
            }
        });
        générer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                générerActionPerformed(evt);
            }
        });
        getContentPane().add(générer);
        générer.setBounds(20, 230, 50, 40);

        jb.setColumns(20);
        jb.setRows(5);
        jScrollPane1.setViewportView(jb);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(80, 220, 500, 60);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("p");
        jLabel1.setToolTipText("'p '  c'est un nombre premier fixe tres grand");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(50, 70, 50, 34);

        jg.setColumns(20);
        jg.setRows(5);
        jg.setTabSize(10);
        jScrollPane3.setViewportView(jg);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(80, 140, 500, 60);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("g");
        jLabel4.setToolTipText("'g'  c'est le generateur de p ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(50, 140, 40, 35);

        jB.setColumns(20);
        jB.setRows(5);
        jB.setToolTipText("");
        jScrollPane6.setViewportView(jB);

        getContentPane().add(jScrollPane6);
        jScrollPane6.setBounds(80, 380, 500, 60);

        jA.setColumns(20);
        jA.setRows(5);
        jA.setToolTipText("");
        jScrollPane7.setViewportView(jA);

        getContentPane().add(jScrollPane7);
        jScrollPane7.setBounds(80, 300, 500, 60);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("A");
        jLabel7.setToolTipText("la station 2 recue la valeur de A via la station 1");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(40, 300, 76, 32);

        jhash.setColumns(20);
        jhash.setRows(5);
        jhash.setTabSize(10);
        jScrollPane2.setViewportView(jhash);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(130, 540, 450, 60);

        jp.setColumns(20);
        jp.setRows(5);
        jp.setTabSize(10);
        jScrollPane8.setViewportView(jp);

        getContentPane().add(jScrollPane8);
        jScrollPane8.setBounds(80, 60, 500, 60);

        jcle.setColumns(20);
        jcle.setRows(5);
        jcle.setTabSize(10);
        jScrollPane10.setViewportView(jcle);

        getContentPane().add(jScrollPane10);
        jScrollPane10.setBounds(130, 460, 450, 60);

        hasher.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        hasher.setForeground(new java.awt.Color(255, 255, 255));
        hasher.setText("SHA-256");
        hasher.setToolTipText("fonction de hachage 256 bits pour rendre la clé de 2048 bits  a une clé de 256 bits");
        hasher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hasherActionPerformed(evt);
            }
        });
        getContentPane().add(hasher);
        hasher.setBounds(10, 550, 100, 50);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Vider");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(160, 620, 130, 50);

        quitter.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        quitter.setForeground(new java.awt.Color(255, 255, 255));
        quitter.setText("Déconnecter");
        quitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitterActionPerformed(evt);
            }
        });
        getContentPane().add(quitter);
        quitter.setBounds(380, 620, 120, 50);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Envoyer");
        jButton4.setToolTipText("envoyer( 'g'  puisaance 'b') mod' p'   a  la station CLIENT");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(600, 380, 120, 50);

        difie.setFont(new java.awt.Font("Bauhaus 93", 1, 18)); // NOI18N
        difie.setForeground(new java.awt.Color(255, 255, 0));
        difie.setText(" .::  Diffie Hellman  ::.");
        getContentPane().add(difie);
        difie.setBounds(190, -10, 320, 60);

        bcle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bcle.setForeground(new java.awt.Color(255, 255, 255));
        bcle.setText("La Clé");
        bcle.setToolTipText("la clé=A puissance b mod p");
        bcle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcleActionPerformed(evt);
            }
        });
        getContentPane().add(bcle);
        bcle.setBounds(10, 470, 100, 50);

        btnB.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnB.setForeground(new java.awt.Color(255, 255, 255));
        btnB.setText("B");
        btnB.setToolTipText("B=g puissance b mod p");
        btnB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBActionPerformed(evt);
            }
        });
        getContentPane().add(btnB);
        btnB.setBounds(10, 390, 50, 40);
        getContentPane().add(vide);
        vide.setBounds(190, 50, 320, 10);

        utiliser.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        utiliser.setForeground(new java.awt.Color(255, 255, 255));
        utiliser.setText("RC4");
        utiliser.setToolTipText("lorsque vous cliquer sur ce bouton vous allez trouver la page de déchiffrement a l'aide de RC4");
        utiliser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        utiliser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utiliserActionPerformed(evt);
            }
        });
        getContentPane().add(utiliser);
        utiliser.setBounds(600, 540, 120, 50);

        connect.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        connect.setForeground(new java.awt.Color(255, 255, 255));
        connect.setText("connecter");
        connect.setToolTipText("connecter le client");
        connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectActionPerformed(evt);
            }
        });
        getContentPane().add(connect);
        connect.setBounds(20, 10, 120, 40);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("recevoir_p&g");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(600, 110, 150, 50);

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("recevoir-A");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(600, 300, 120, 50);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/light_texture2295.jpg"))); // NOI18N
        jLabel3.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jLabel3AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        getContentPane().add(jLabel3);
        jLabel3.setBounds(-6, -6, 780, 700);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void générerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_générerActionPerformed

     b();
       
       
    }//GEN-LAST:event_générerActionPerformed

    private void hasherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hasherActionPerformed
        
             
             
       
      try {String in2="";
         in2=jcle.getText();
         // inpu=jclé.getText();
          sha256(in2);
      } catch (Exception ex) {  JOptionPane.showMessageDialog(null, "Attention il y a problème ");
         
      }
        
        
    }//GEN-LAST:event_hasherActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // jp.setText(null);  jg.setText(null); 
          jb.setText(null);  //jb.setText(null); 
           jcle.setText(null);  jA.setText(null); jB.setText(null);  jhash.setText(null);  
    }//GEN-LAST:event_jButton1ActionPerformed

    private void quitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitterActionPerformed
        // TODO add your handling code here:
          dispose();
    }//GEN-LAST:event_quitterActionPerformed

    private void générerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_générerMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_générerMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        // TODO add your handling code here:
        
        
         try {
           String msgout="";
        msgout=jB.getText().trim();
           dout.writeUTF(msgout);//writeUTF(msgout);//.println(msgout);
           /// jB.setText(msgin);
       } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "probleme de connexion ");
           
       }
         
           
       
    }//GEN-LAST:event_jButton4ActionPerformed

    private void bcleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcleActionPerformed
        // TODO add your handling code here:
       try{  sp=jp.getText();
         BigInteger p= new BigInteger(sp);
          sg=jg.getText();
         BigInteger g= new BigInteger(sg);
         
           sA=jA.getText();
         BigInteger A= new BigInteger(sA);
              sb=jb.getText();
         BigInteger b= new BigInteger(sb);
               
           //pour connsteruire un biginteger a partir de la chaine sB
          
   BigInteger k=A.modPow(b, p);
   sclé = k.toString();
  jcle.append(sclé);}catch(Exception e){      JOptionPane.showMessageDialog(null, " Attention un parametre qui manque");
  }
    }//GEN-LAST:event_bcleActionPerformed

    private void btnBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBActionPerformed
        // TODO add your handling code here:
        try{ sp=jp.getText();
         BigInteger p= new BigInteger(sp);
          sg=jg.getText();
         BigInteger g= new BigInteger(sg);
         
          sb1=jb.getText();
         BigInteger b1= new BigInteger(sb1);
         
    //calculer g puiss b mod p
        BigInteger B=g.modPow(b1, p);
         sB= B.toString();
  jB.append(sB);}catch(Exception e){      JOptionPane.showMessageDialog(null, "Attention  un parametre qui manque ");
  }
      //  jB.append();
    }//GEN-LAST:event_btnBActionPerformed

    private void utiliserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_utiliserActionPerformed


RC4_Server frame=new RC4_Server();
frame.setVisible(true);
  //frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
RC4_Server .clé.setText(this.jhash.getText());
 //
    }//GEN-LAST:event_utiliserActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

   
            

    }//GEN-LAST:event_formWindowOpened

    private void connectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectActionPerformed
        // TODO add your handling code here:
        
        mserver();
        
    }//GEN-LAST:event_connectActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    
     
        String msgin2 = null;
        try {
            msgin=din.readUTF();
          msgin2=din.readUTF();
      } catch (Exception ex) {
               JOptionPane.showMessageDialog(null, " Problème de connexion  ");
      }
         
         
         jp.setText(msgin);
         jg.setText(msgin2);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
     
        String msgin3 = null;    
        try {
          msgin3=din.readUTF();
      } catch (Exception ex) {
              JOptionPane.showMessageDialog(null, "probleme de connexion ");
      }
         
       
         jA.setText(msgin3);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jLabel3AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabel3AncestorAdded

         
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel3AncestorAdded

    /**
     * @param args the command line arguments
     */
 public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hellman_Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hellman_Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hellman_Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hellman_Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
      
  

        /* Create and display the form */
       java.awt.EventQueue.invokeLater(new Runnable() {
            public  void run() {
               new Hellman_Server().setVisible(true);}
                
 
            
       });
 }
      
 
 
     
    static String msgin,msgin_A,msgin_g;
         public static void mserver(){ 
       

             
  System.out.println(" j' attends une connexion moi le serveur");

  try{
         
           
              serveur=new ServerSocket(2001);//server start at number 123
           socket=serveur.accept();
                
         din=new    DataInputStream (socket.getInputStream());
     dout=new  DataOutputStream(socket.getOutputStream());
     // msgin=din.readUTF();
     // msgin_g=din.readUTF();
     // msgin_A=din.readUTF();
    //  } catch (Exception ex) {
      
                //JOptionPane.showMessageDialog(null, " Problème de connexion  ");
     // }
             
       
       
     /* msgin=din.readUTF().trim();
        jp.setText(jp.getText().trim()+msgin);*/
        //msga.setText(msga.getText().trim()+"\n"+msgin)
   //  System.out.println(" j' attends une connexion moi le serveur");
     
    
        }    catch(Exception e){  JOptionPane.showMessageDialog(null, "probleme de connexion ");
            
      }
  
      
         //jp.setText(msgin);
         // jg.setText(msgin_g); 
        // jA.setText(msgin_A);
       
         }
         

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bcle;
    private javax.swing.JButton btnB;
    private javax.swing.JButton connect;
    private transient javax.swing.JButton difie;
    private javax.swing.JButton générer;
    private javax.swing.JButton hasher;
    private static javax.swing.JTextArea jA;
    private javax.swing.JTextArea jB;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextArea jb;
    public javax.swing.JTextArea jcle;
    private javax.swing.JTextArea jclé;
    private static javax.swing.JTextArea jg;
    private static javax.swing.JTextArea jhash;
    private static javax.swing.JTextArea jp;
    private javax.swing.JButton quitter;
    private javax.swing.JButton utiliser;
    private javax.swing.JButton vide;
    // End of variables declaration//GEN-END:variables

   
}
